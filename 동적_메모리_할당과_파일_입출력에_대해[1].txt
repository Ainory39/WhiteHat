동적 메모리 할당과 파일 입출력에 대해

정적 할당과 동적할당에 대하여.

정적 할당
 정의 : 프로그램을 실행하기 전에 필요한 자원을 미리 할당하는 기법으로 필요한 자원이 미리 준비되기 때문에 실행 속도는 빠르나 자원의 이용은 비효율적.
 정적 할당이란 main함수를 시작할 때 메모리의 스택 영역이나 데이터 영역에 컴파일러가 크기에 맞게 자동으로 할당한다. 이를 정적 할당이라한다.

 단점 : 만약 배열에 100개의 요소를 저장할 수 있다고 했을 때, 실제로는 30개만 저장한다면 이는 극심한 메모리의 낭비가 될 것이고, 500개를 저장한다면 메모리가 부족할 것이다. 그렇다고 배열의 크기를 변수로 지정하는 것은 문법에 어긋나기 때문에 불가능하다. 이럴 때 사용할 수 있는 것이 동적 할당이다.

동적 할당
 정의 : 필요할 때 메모리를 할당하고 사용을 다했을 경우 해제하는 기법. 정적 할당보다 속도는 느리지만 메모리를 개발자가 상황에 따라 다르게 설정할 수 있으므로 메모리를 매우 효율적으로 사용할 수 있다.

필요성 : 
 1. 메모리 낭비 감소
 2. 런타임(프로그램 실행) 중일 때 메모리의 크기를 변경하는 것이 가능
 3. 큐, 스택, 연결리스트, 이진트리와 같은 자료구조를 표현할 때 사용됨

동적 할당에 사용되는 함수들
1. malloc
- 보이드형 포인터 변수를 반환하는 함수로써 동적 할당할 때 쓰이는 가장 일반적인 함수이다. 사용 방식은 아래와 같다.
메모리를 할당할 포인터 변수 = (메모리를 할당할 변수의 자료형) malloc(할당할 byte수);
2. calloc
3. realloc
4. memset
5. free